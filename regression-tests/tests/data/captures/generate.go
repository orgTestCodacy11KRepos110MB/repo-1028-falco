//go:build ignore
// +build ignore

package main

import (
	"log"
	"os"
	"path"
	"text/template"
	"time"

	"github.com/falcosecurity/falco/regression-tests/tests/data"
)

type headerInfo struct {
	Timestamp time.Time
	Package   string
}

var headerTemplate = template.Must(template.New("header").Parse(`// Code generated by go generate; DO NOT EDIT.
// This file was generated by robots at {{ .Timestamp }}

package {{ .Package }}

import (
	"github.com/falcosecurity/falco/regression-tests/pkg/utils"
)
`))

func die(err error) {
	if err != nil {
		log.Fatal(err.Error())
	}
}

func main() {
	out, err := os.Create("captures_gen.go")
	die(err)
	defer out.Close()

	headerTemplate.Execute(out, headerInfo{
		Timestamp: time.Now(),
		Package:   "captures",
	})
	// todo: make this recursive and support plugin tests too
	err = data.GenCodeFromLargeFilesDir(out, "./files/", false, func(s string) bool {
		return path.Ext(s) == ".scap"
	})
}
